import cv2
import numpy as np
# Read the original image
#from matplotlib import pyplot as plt
img = cv2.imread('im/1849046.png')
output=img.copy()
# Display original image

cv2.imshow('Original', img)

cv2.waitKey(0)


#color_img = np.asarray(Image.open(img_filename)) / 255

# Convert to graycsale

img_gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
cv2.imshow('Gray', img_gray)
# Blur the image for better edge detection
cv2.waitKey(0)
img_blur = cv2.GaussianBlur(img_gray, (3, 3), 0)
# Sobel Edge Detection

sobelx = cv2.Sobel(src=img_gray, ddepth=cv2.CV_64F, dx=1, dy=0, ksize=5)  # Sobel Edge Detection on the X axis

sobely = cv2.Sobel(src=img_gray, ddepth=cv2.CV_64F, dx=0, dy=1, ksize=5)  # Sobel Edge Detection on the Y axis

sobelxy = cv2.Sobel(src=img_gray, ddepth=cv2.CV_64F, dx=1, dy=1, ksize=5)  # Combined X and Y Sobel Edge Detection

# Display Sobel Edge Detection Images

cv2.imshow('Sobel X', sobelx)

cv2.waitKey(0)

cv2.imshow('Sobel Y', sobely)

cv2.waitKey(0)

cv2.imshow('Sobel X Y using Sobel() function', sobelxy)

cv2.waitKey(0)



# Canny Edge Detection

edges = cv2.Canny(image=img_gray, threshold1=10, threshold2=50)  # Canny Edge Detection

# Display Canny Edge Detection Image

cv2.imshow('Canny Edge Detection', edges)

cv2.waitKey(0)


output = img.copy()
img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
# If some circle is found

import numpy as np



ret,thresh1 = cv2.threshold(img,127,255,cv2.THRESH_BINARY)
ret,thresh2 = cv2.threshold(img,127,255,cv2.THRESH_BINARY_INV)
ret,thresh3 = cv2.threshold(img,127,255,cv2.THRESH_TRUNC)
ret,thresh4 = cv2.threshold(img,127,255,cv2.THRESH_TOZERO)
ret,thresh5 = cv2.threshold(img,127,255,cv2.THRESH_TOZERO_INV)
cv2.imshow('thresh1', thresh1)
edges1 = cv2.Canny(image=thresh1, threshold1=50, threshold2=150)  # Canny Edge Detection

# Display Canny Edge Detection Image

cv2.imshow('canny thresh1', edges)

cv2.waitKey(0)

cv2.imshow('thresh2', thresh2)
edges2= cv2.Canny(image=thresh2, threshold1=100, threshold2=200)  # Canny Edge Detection
# Display Canny Edge Detection Image
cv2.waitKey(0)
cv2.imshow('Canny thresh2', edges2)
cv2.waitKey(0)
cv2.imshow('thresh3 ', thresh3)
edges3 = cv2.Canny(image=thresh3, threshold1=10, threshold2=50)  # Canny Edge Detection
cv2.imshow('canny thresh3',edges3)
# Display Canny Edge Detection Image

cv2.waitKey(0)
cv2.imshow('thresh4', thresh4)
edges4 = cv2.Canny(image=thresh4, threshold1=10, threshold2=50)  # Canny Edge Detection

# Display Canny Edge Detection Image

cv2.imshow('Canny thresh4', edges)
cv2.waitKey(0)
cv2.imshow('thresh5', thresh5)
edges5 = cv2.Canny(image=thresh5, threshold1=100, threshold2=250)  # Canny Edge Detection
e2 = cv2.cvtColor(edges5, cv2.COLOR_GRAY2RGB)
cv2.imshow('Canny thresh3', e2)
# Display Canny Edge Detection Image

cv2.imshow('Canny thresh5', edges)
cv2.waitKey(0)
#plt.show()



cv2.destroyAllWindows()
